# 24 October 2019
# WD: /home/jkimball/haasx092/main_GBS/191021_samtools
# The purpose of this code is to make a SNP list from the variant calling performed on 21 October 2019

prefix="191021_samtool"
normalize="191024_normalize"
mktemp | read tmp
zcat ${prefix}_*.vcf.gz | awk -f ./normalize.awk > '$tmp' 2> $normalize_prefix.err

mv '$tmp' 191024_normalize.tsv

# Only save SNPs where the minimum depth is 5
awk '{ if ($8 >= 5) {print}}' 191024_normalize.tsv > 191024_main_GBS_filtered.tsv

# Filter by quality (=20) before next step... Reduced 24G to 19G
awk '{ if ($5 >= 20) {print}}' 191024_main_GBS_filtered.tsv > 191024_main_GBS_filtered_2.tsv

# This is to strip unnecessary components from the scaffold names.. only reduced file size by 2G (19G to 17G)
awk '{gsub("HRSCAF=", ""); print}' 191024_main_GBS_filtered_2.tsv > 191024_main_GBS_filtered_slim.tsv

# Now to try and shorten sample names...now down to 12G still too big
awk '{gsub("/.+bam", ""); print}' 191024_main_GBS_filtered_slim.tsv > 191024_main_GBS_filtered_slim_2.tsv

# Remove "Scaffold_" ... it can be put back in later. File size is now 9.9G
awk '{gsub("Scaffold_", ""); print}' 191024_main_GBS_filtered_slim_2.tsv > 191024_main_GBS_filtered_slim_3.tsv

# Only keep necessary columns... reduced to 6.6G .. successfully loads into R!
awk '{print $1"\t"$2"\t"$6"\t"$7}' 191024_main_GBS_filtered_slim_3.tsv > 191024_main_GBS_filtered_slim_4.tsv

# Subset data by scaffolds to make it easier for R to handle..
awk '{ if ($1 ~ /1062;/) {print}}' 191024_main_GBS_filtered_slim_4.tsv > 191024_main_GBS_filtered_slim_4_scf1062.tsv
awk '{ if ($1 ~ /1063;/) {print}}' 191024_main_GBS_filtered_slim_4.tsv > 191024_main_GBS_filtered_slim_4_scf1063.tsv
awk '{ if ($1 ~ /1064;/) {print}}' 191024_main_GBS_filtered_slim_4.tsv > 191024_main_GBS_filtered_slim_4_scf1064.tsv
awk '{ if ($1 ~ /1065;/) {print}}' 191024_main_GBS_filtered_slim_4.tsv > 191024_main_GBS_filtered_slim_4_scf1065.tsv

# R
# Load required packages
library(data.table)
library(reshape2)

# Going to try t read in data one scaffold at a time...
fread("191024_main_GBS_filtered_slim_4_scf1062.tsv") -> scf1062
fread("191024_main_GBS_filtered_slim_4_scf1063.tsv") -> scf1063
fread("191024_main_GBS_filtered_slim_4_scf1064.tsv") -> scf1064
fread("191024_main_GBS_filtered_slim_4_scf1065.tsv") -> scf1065

# Give columns meaningful names
setnames(scf1062, c("scaffold", "position", "sample", "GT"))
setnames(scf1063, c("scaffold", "position", "sample", "GT"))
setnames(scf1064, c("scaffold", "position", "sample", "GT"))
setnames(scf1065, c("scaffold", "position", "sample", "GT"))

# Strip remaining excess info from scaffold name..
scf1062[, scaffold := sub(";.+$", "", scaffold)]
scf1063[, scaffold := sub(";.+$", "", scaffold)]
scf1064[, scaffold := sub(";.+$", "", scaffold)]
scf1065[, scaffold := sub(";.+$", "", scaffold)]

# Put data into wide format and re-convert to data.table format
dcast(scf1062, scaffold + position ~ sample, value.var="GT") -> scf1062
scf1062 <- as.data.table(scf1062)

dcast(scf1063, scaffold + position ~ sample, value.var="GT") -> scf1063
scf1063 <- as.data.table(scf1063)

dcast(scf1064, scaffold + position ~ sample, value.var="GT") -> scf1064
scf1064 <- as.data.table(scf1064)

dcast(scf1065, scaffold + position ~ sample, value.var="GT") -> scf1065
scf1065 <- as.data.table(scf1065)

# Count the number of "NA" occurrences per row
# scf1064 causes R to crash
scf1062[, sum := apply(scf1062, MARGIN=1, function(x) sum(is.na(x)))]
#scf1063[, sum := apply(scf1063, MARGIN=1, function(x) sum(is.na(x)))]
scf1064[, sum := apply(scf1064, MARGIN=1, function(x) sum(is.na(x)))]
scf1065[, sum := apply(scf1065, MARGIN=1, function(x) sum(is.na(x)))]

# Select rows (SNPs) with fewer than 158 (15%) missing data points (# of samples missing that SNP)
scf1062[sum < 158] -> scf1062
#scf1063[sum < 158] -> scf1063
scf1064[sum < 158] -> scf1064
scf1065[sum < 158] -> scf1065

# Save data
save(scf1062, scf1063, scf1064, scf1065, file="191024_main_GBS_filtered_slim_4.Rdata")
